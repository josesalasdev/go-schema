name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, feature/* ]

# Añadir esta sección de permisos
permissions:
  contents: write
  pages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod tidy

    # Run golangci-lint
    - name: Install golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m

    # Run tests with coverage
    - name: Run tests with coverage
      run: |
        go test -race -coverprofile=coverage.txt -covermode=atomic ./...
        go tool cover -func=coverage.txt

    # Upload coverage to Codecov
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.txt
        flags: unittests
        fail_ci_if_error: false

    # Generate and upload coverage report as artifact
    - name: Generate HTML coverage report
      run: |
        mkdir -p coverage
        go tool cover -html=coverage.txt -o coverage/index.html
        echo '<meta http-equiv="refresh" content="0; url=./index.html" />' > coverage/index.md
      
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/
        retention-days: 7

    - name: Build
      run: go build -v ./...

  # New job to publish coverage report to GitHub Pages
  publish-coverage:
    needs: build
    if: github.ref == 'refs/heads/main'  # Only run on main branch
    runs-on: ubuntu-latest
    
    steps:
    - name: Download coverage artifact
      uses: actions/download-artifact@v4
      with:
        name: coverage-report
        path: coverage
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./coverage
        destination_dir: coverage
        keep_files: false